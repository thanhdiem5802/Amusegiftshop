@{
    ViewData["Title"] = "Tình trạng đơn hàng";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <p class="m-0 font-weight-bold text-primary">Tình trạng đơn hàng</p>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table id="dataTable" class="table table-bordered" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <th>Mã đơn hàng</th>
                        <th>Tên khách hàng</th>
                        <th>Tỉnh / Thành phố</th>
                        <th>Quận / Huyện</th>
                        <th>Phường / Xã</th>
                        <th>Địa chỉ/ Số nhà</th>
                        <th>Số điện thoại</th>
                        <th>Thanh toán</th>
                        <th>Xác nhận</th>
                        <th>#</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>
<div class="modal fade" id="myModalUpdate">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">

            <!-- Modal Header -->
            <div class="modal-header">
                <h4 class="modal-title">Thông tin chi tiết đơn hàng</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>

            <!-- Modal body -->
            <div class="modal-body">
                <div>
                    <label for="titleUpdate">Mã đơn: <span id="orderId"></span></label>
                </div>
                <div>
                    <label for="descriptionUpdate">Sản phẩm</label>
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th>Tên sản phẩm</th>
                                <th>Số lượng</th>
                            </tr>
                        </thead>
                        <tbody id="orderDetailsBody">
                            <!-- Order details will be dynamically inserted here -->
                        </tbody>
                    </table>
                </div>
            </div>

            <!-- Modal footer -->
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
            </div>

        </div>
    </div>
</div>

@section Scripts {
    <script src="~/assets/js/data.json"></script>
    <!-- Thư viện real-time Signalr -->
    <script src="https://cdn.jsdelivr.net/npm/@@microsoft/signalr@@5.0.0/dist/browser/signalr.min.js"></script>
    <script>
        var listprodvince = JSON.parse(data);
        console.log(listprodvince)
        $('#dataTable').DataTable({
            "ajax": {
                "url": "/Admin/Order/GetAllOrder",
                "type": "GET",
                "dataSrc": "userOrder."
            },
            "columns": [
                { "data": "orderId" },
                { "data": "name" },
                {
                    "data": "province",
                    "render": function (data, type, row) {
                        var index = listprodvince.findIndex(function (item) {
                            return item.code == data;
                        });
                        return listprodvince[index].name; // Trả về tên tỉnh/thành phố thay vì mã
                    }
                },
                {
                    "data": "district",
                    "render": function (data, type, row) {
                        var index = listprodvince.findIndex(function (item) {
                            return item.code == row.province;
                        });
                        //console.log(listprodvince[index].districts, index);
                        var indexDistrict = listprodvince[index].districts.findIndex(function (item) {
                            return item.code == data;
                        });
                        return listprodvince[index].districts[indexDistrict].name; // Trả về tên tỉnh/thành phố thay vì mã
                    }
                },
                {
                    "data": "town",
                    "render": function (data, type, row) {
                        var index = listprodvince.findIndex(function (item) {
                            return item.code == row.province;
                        });
                        //console.log(listprodvince[index].districts, index);
                        var indexDistrict = listprodvince[index].districts.findIndex(function (item) {
                            return item.code == row.district;
                        });
                        var indexTown = listprodvince[index].districts[indexDistrict].wards.findIndex(function (item) {
                            return item.code == data;
                        });
                        return listprodvince[index].districts[indexDistrict].wards[indexTown].name; // Trả về tên tỉnh/thành phố thay vì mã
                    }
                },
                { "data": "address" },
                { "data": "phone" },
                {
                    "data": null,
                    "render": function (data, type, row) {
                        if (row.status) {
                            return 'Rồi';
                        } else {
                            return 'Chưa';
                        }
                    }
                },

                {
                    "data": null,
                    "render": function (data, type, row) {
                        if (!row.orderStatus) {
                            return '<a href="javascript:void(0)" class="m-0 font-weight-bold text-primary" onclick="Delivery(' + data.orderId + ')">Giao</a>';
                        } 
                    }
                },
                {
                    "data": null,
                    "render": function (data, type, row) {
                        return '<a href="javascript:void(0)" class="m-0 font-weight-bold text-primary" onclick="Detail(' + data.orderId + ')">Chi tiết</a>';
                    }
                }
            ],
            "order": [
                [0, 'desc'] // Sắp xếp cột đầu tiên (cột ID) theo thứ tự giảm dần
            ],
            "lengthMenu": [5, 10, 25, 50],
            "language": {
                processing: "Message khi đang tải dữ liệu",
                search: "Tìm kiếm",
                lengthMenu: "Điều chỉnh số mục trên 1 trang _MENU_ ",
                info: "Hiển thị _START_ đến _END_ trong  _TOTAL_ mục",
                infoEmpty: "Không có dữ liệu, Hiển thị 0 bản ghi trong _MAX_ tổng cộng 0 ",
                infoFiltered: "(Không có sản phẩm trong _MAX_ bản ghi)",
                loadingRecords: "",
                zeroRecords: "Không có dữ liệu theo tìm kiếm",
                emptyTable: "Hiện tại chưa có đơn hàng mới",
                paginate: {
                    first: "<<",
                    previous: "<",
                    next: ">",
                    last: ">>"
                },
                aria: {
                    sortAscending: ": Message khi đang sắp xếp theo column",
                    sortDescending: ": Message khi đang sắp xếp theo column",
                }
            },
            "processing": true,
            "serverSide": false,
        });
    </script>
    <script>
        function Delivery(Id) {
            // Hiển thị hộp thoại xác nhận trước khi gửi yêu cầu
            var confirmation = confirm("Bạn có chắc chắn đơn hàng này đã giao và thanh toán rồi đúng không?");
            if (confirmation) {
                var formData = new FormData();
                formData.append('Id', Id);
                $.ajax({
                    url: '/Admin/Order',
                    type: 'Post',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        if (response.success) {
                            $('#dataTable').DataTable().ajax.reload();
                            showAlertModal('success', response.message);
                        } else {
                            showAlertModal('danger', response.message);
                        }
                    },
                    error: function () {
                        showAlertModal('danger', 'Có lỗi xảy ra khi gửi yêu cầu!');
                    }
                });
            }
        }
        function Detail(Id) {
            var formData = new FormData();
            formData.append('Id', Id);
            $.ajax({
                url: '/Admin/Order/GetAllOrderDetail',
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function (response) {
                    if (response.success) {
                        $('#orderId').text(Id); // Set the order ID in the modal
                        var orderDetails = response.result;
                        var tbody = $('#orderDetailsBody');
                        tbody.empty(); // Clear any existing rows
                        $.each(orderDetails, function (index, detail) {
                            var row = '<tr>' +
                                '<td>' + detail.productName + '</td>' +
                                '<td>' + detail.quantity + '</td>' +
                               
                                '</tr>';
                            tbody.append(row); // Append new row to tbody
                        });
                        $('#myModalUpdate').modal('show');
                    } else {
                        showAlertModal('danger', response.error);
                    }
                },
                error: function () {
                    showAlertModal('danger', 'Có lỗi xảy ra khi gửi yêu cầu!');
                }
            });
        }

    </script>
    <script>
        var connection = new signalR.HubConnectionBuilder().withUrl("/notificationHub").build();
        connection.on("OrderHub", function () {
            showAlertModal('success', "Đã có đơn đặt hàng mới!");
            $('#dataTable').DataTable().ajax.reload();
        });

        // Hàm để khởi động lại kết nối
        function startConnection() {
            connection.start().then(function () {
                console.log("Connection started");
            }).catch(function (err) {
                console.error("Error while starting connection: " + err);
                // Nếu không thể kết nối, thực hiện tái kết nối sau một khoảng thời gian
                setTimeout(startConnection, 5000); // Ví dụ: kết nối lại sau 5 giây
            });
        }

        // Khởi động kết nối ban đầu
        startConnection();

        // Xử lý sự kiện khi kết nối bị đóng
        connection.onclose(function (error) {
            console.log("Connection closed: " + error);
            // Nếu kết nối bị đóng, thực hiện tái kết nối sau một khoảng thời gian
            setTimeout(startConnection, 5000); // Ví dụ: kết nối lại sau 5 giây
        });
    </script>

}